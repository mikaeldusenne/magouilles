# This template will be copied and interpolated to the nginx.conf file

# user  nginx;
worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
# pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    # default_type  application/octet-stream;
    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';
    # access_log  /var/log/nginx/access.log  main;
    # sendfile        on;

    # limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
    # # and add this to different locations
    # limit_req zone=mylimit burst=20 nodelay;
    
    resolver 127.0.0.11 valid=3600s;
    
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        
        location / {
            try_files $uri $uri/ =404;
        }
    }
    
    server {
        listen 443 ssl;
        server_name keycloak.$EDS_DOMAIN;
        
        set $service $EDS_CONTAINER_PREFIX-keycloak:8443;
        
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        
        location / {
            proxy_pass https://$service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
        }
    }
    
    server {
        listen 443 ssl;
        server_name jupyter.$EDS_DOMAIN;
        
        set $service $EDS_CONTAINER_PREFIX-jupyterhub;
        
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        location / {
            proxy_pass https://$service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            # for jupyterhub socket for kernel to function correctly
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Port 443;
        }
    }
    
    server {
        listen 443 ssl;
        server_name matrix.$EDS_DOMAIN;
        
        set $service $EDS_CONTAINER_PREFIX-matrix:8448;
        
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        location / {
            proxy_pass https://$service;
            client_max_body_size 2000M;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            # for socket to function correctly
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Port 443;
        }
    }

    server {
        listen 443 ssl;
        server_name chat.$EDS_DOMAIN;
        
        set $service $EDS_CONTAINER_PREFIX-matrix-element;
        
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        location / {
            proxy_pass http://$service;
            client_max_body_size 2000M;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            # for socket to function correctly
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Port 443;
        }
    }
    
    server {
        listen 443 ssl;
        server_name gitlab.$EDS_DOMAIN;
        
        set $service $EDS_CONTAINER_PREFIX-gitlab;
        
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        location / {
            proxy_pass https://$service;
            client_max_body_size 2000M;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            # for jupyterhub socket for kernel to function correctly
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Port 443;
        }
    }

    server {
        listen 443 ssl;
        server_name meet.$EDS_DOMAIN;
        
        set $service $EDS_CONTAINER_PREFIX-jitsi:80;
        
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        location / {
            proxy_pass http://$service;
            client_max_body_size 2000M;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            # for jupyterhub socket for kernel to function correctly
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Port 443;
        }
    }

    
}
