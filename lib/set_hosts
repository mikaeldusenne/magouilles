#!/bin/zsh

set -e

source .env

cp /etc/hosts /etc/hosts.backup

function get_ipaddr(){
    echo $(docker inspect "$1" | jq -r ".[0].NetworkSettings.Networks.[\"${EDS_CONTAINER_PREFIX}-network-outside-world\"].IPAddress" | sed '/null/d')
}

IPADDR=$(get_ipaddr "${EDS_CONTAINER_PREFIX}-nginx")
echo "address for nginx: $IPADDR"

function ip_error(){
    echo $(docker inspect "${EDS_CONTAINER_PREFIX}-nginx" | jq -r ".[0].NetworkSettings.Networks")
    
    echo "no ip address found"
    exit 1
}

[ -z $IPADDR ] && ip_error

./lib/remove_hosts

echo -e '#### Development' >> /etc/hosts

# if ! grep -q 'Development' /etc/hosts; then
cat <<EOF >> /etc/hosts
$IPADDR $EDS_DOMAIN
$IPADDR keycloak.$EDS_DOMAIN
$IPADDR gitlab.$EDS_DOMAIN
$IPADDR jupyter.$EDS_DOMAIN
$IPADDR chat.$EDS_DOMAIN
$IPADDR meet.$EDS_DOMAIN
$IPADDR matrix.$EDS_DOMAIN
EOF
# fi

function add(){
    ipaddr=$(get_ipaddr "$1")
    if [ -n "$ipaddr" ]; then
        # echo "--------"
        # echo "adding: $ipaddr $1"
        echo "$ipaddr $1" | tee -a /etc/hosts
    else
        echo "no ip addr found for $1"
        # echo "docker inspect "$1" | jq -r ".[0].NetworkSettings.Networks.[\"${EDS_CONTAINER_PREFIX}-network\"].IPAddress" | sed '/null/d'"
        # echo $(docker inspect "$1" | jq -r ".[0].NetworkSettings.Networks")
    fi
}

sed -i "/${EDS_CONTAINER_PREFIX:-eds}-[a-z\-]*$/d" /etc/hosts

for e in $(docker ps  --format='{{.Names}}' | grep -i "^${EDS_CONTAINER_PREFIX:-eds}-"); do
    echo ">>>>>>>> $e"
    add "$e"
done

echo -e '\n#### END_development' >> /etc/hosts

echo "============="

cat /etc/hosts
